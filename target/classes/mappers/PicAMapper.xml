<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper

  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"

  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.server.pica.PicAMapper">
<!-- mybatis-config.xml에 맵핑한 dto -->
<select id='test' resultType="Test">
	 select * from test
</select>
<!-- 직접 dto를 지정하려면 풀패키지 이름으로 -->
<insert id="uploadPic" parameterType="com.server.pica.dto.PicUploadDTO">
	insert into PICTURE (file,latitude,longitude,contents,p_member_id,p_album_id) 
	values (#{file},#{latitude},#{longitude},#{contents},#{p_member_id},#{p_album_id})
</insert>

<insert id="createAlbum" parameterType="com.server.pica.dto.CreateAlbumDTO">
	insert into ALBUM (name, description,defaultPicture,create_p_member_id) 
	values(#{name},#{description},#{defaultPicture},#{create_p_member_id})
</insert>

<insert id="registerMember" parameterType="com.server.pica.dto.RegisterMemberDTO">
	insert into MEMBER (nickname, password,email,phonenumber) 
	values(#{nickname},#{password},#{email},#{phonenumber})
</insert>

<select id='showPic' resultType="com.server.pica.dto.PicUploadDTO">
	 select * from PICTURE
</select>

<select id='showAlbum' resultType="com.server.pica.dto.CreateAlbumDTO">
	 select * from ALBUM
</select>
<!-- 앨범 ID를 입력받아서 해당 앨범정보 가져오기 -->
<select id='getAlbum' parameterType="int" resultType="com.server.pica.dto.CreateAlbumDTO">
	 select * from ALBUM where album_id=#{album_id}
</select>

<select id='showMember' resultType="com.server.pica.dto.RegisterMemberDTO">
	 select * from MEMBER
</select>
<!-- 명령어 끝에 세미콜론 뺄것 (중요하진않음) -->
<!-- (중요함 )윈도우에선 테이블 이름 대소문자 구분 안하는데 리눅스는 함. 대문자로 쓸것.-->
<!-- 자기가 만든것만 가져오게 되어있는데 자기가 속한 앨범들 정보 가져오기 -->
<select id='myAlbum' parameterType="int" resultType="com.server.pica.dto.CreateAlbumDTO">
	 select * from ALBUM where create_p_member_id=#{create_p_member_id}
</select>

<select id='getNickNameFromId' parameterType="int" resultType="String">
	 select nickname from MEMBER where member_id=#{member_id}
</select>

<select id='showPicture' parameterType="int" resultType="com.server.pica.dto.PictureDTO">
	 select * from PICTURE where p_album_id=#{album_id}
</select>
<!-- 태그 내용 입력받아서 해당 태그 ID 가져오기 -->
<select id='getTagIdFromTag' parameterType="String" resultType="int">
	 select tag_id from TAGS where tags=#{tags}
</select>

<!-- 태그 1개 업로드하기 -->
<insert id="uploadTagOne" parameterType="String">
	insert into TAGS (tags) VALUES (#{tags});
</insert>
<!-- 사진 1개 조회하기 -->
<select id='getPicture' parameterType="int" resultType="com.server.pica.dto.PictureDTO">
	 select * from PICTURE where picture_id=#{picture_id}
</select>
<!-- 멤버 id 입력받아서 해당멤버가 속한 앨범 정보를 담는 album_member 가져오기 -->
<!-- 주로 권한 체크시 사용 -->
<select id='getAlbum_member' parameterType="int" resultType="com.server.pica.dto.AlbumMemberDTO">
	 select * from ALBUM_MEMBER where a_member_id=#{member_id};
</select>
<!-- email로 회원정보 1개 가져오기 TODO : 나중에 email에도 중복여부 체크가 필요하긴할듯-->
<select id='getMemberFromEmail' parameterType="String" resultType="com.server.pica.dto.RegisterMemberDTO">
	 select * from MEMBER where email=#{email}
</select>

<!-- 좋아요 정보 삽입하기-->
<!-- 좋아요 테이블은 중복값을 허용하지만 가능하면 같은 사진의 같은 유저 정보는 안들어오는게 좋음 서버에서 프로그램으로 관리를 잘해줄것-->
<insert id='addLikePicture' parameterType="com.server.pica.dto.LikePictureDTO">
	 insert into LIKE_PICTURE (picture_id, member_id) VALUES (#{picture_id}, #{member_id});
</insert>

<!-- 좋아요 정보 지우기-->
<delete id='deleteLikePicture' parameterType="com.server.pica.dto.LikePictureDTO">
	 delete from LIKE_PICTURE where member_id = #{member_id} and picture_id = #{picture_id} ;
</delete>

<!-- 좋아요 정보 확인하기(토글에 사용)-->
<select id='serchLikePicture' parameterType="com.server.pica.dto.LikePictureDTO" resultType="com.server.pica.dto.LikePictureDTO">
	 select * from LIKE_PICTURE where member_id = #{member_id} and picture_id = #{picture_id} ;
</select>

<!-- 해당 유저가 좋아요한 사진 전부 가져오기-->
<select id='getLike' parameterType="int" resultType="com.server.pica.dto.LikePictureDTO">
	 select * from LIKE_PICTURE where member_id = #{member_id} ;
</select>

<!-- 댓글 입력받기-->
<insert id='addReply' parameterType="com.server.pica.dto.ReplyDTO">
	 insert into REPLY (picture_id, member_id,reply_text) VALUES (#{picture_id}, #{member_id},#{reply_text});	 
</insert>

<!-- 댓글 지우기전에 권한 확인하기 위해 댓글 정보 가져오기-->
<select id='serchReply' parameterType="com.server.pica.dto.ReplyDTO" resultType="com.server.pica.dto.ReplyDTO">
	 select * from REPLY where member_id = #{member_id} and reply_id = #{reply_id} ;
</select>

<!-- 댓글 지우기-->
<delete id='deleteReply' parameterType="int">
	 delete from REPLY where reply_id = #{reply_id} ;
</delete>


<!-- 사진 1개의 댓글 전부 가져오기-->
<select id='getReply' parameterType="int" resultType="com.server.pica.dto.ReplyDTO">
	 select * from REPLY where picture_id = #{picture_id} ;
</select>


</mapper>